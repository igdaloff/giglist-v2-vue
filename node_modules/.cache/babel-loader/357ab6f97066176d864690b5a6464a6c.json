{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selected = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.setCityId && $options.setCityId(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cities, city => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: city.id,\n      value: city.id\n    }, _toDisplayString(city.label), 9\n    /* TEXT, PROPS */\n    , _hoisted_1);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelSelect, $data.selected]]), _createElementVNode(\"p\", null, _toDisplayString($data.selected), 1\n  /* TEXT */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;6EACEA,oBAES,QAFT,EAES;+DAFQC,iBAAQC,OAEhB;IAFmBC,QAAM,yCAAEC,iDAAF;EAEzB,CAFT,sBACEC,oBAAwFC,SAAxF,EAAwF,IAAxF,EAAwFC,YAAjEN,YAAiE,EAAzEO,IAAc,IAAV;yBAAnBH,oBAAwF,QAAxF,EAAwF;MAAxDI,GAAG,EAAED,IAAI,CAACE,EAA8C;MAAzCC,KAAK,EAAEH,IAAI,CAACE;IAA6B,CAAxF,mBAAkEF,IAAI,CAACI,MAAvE,EAA4E;IAAA;IAA5E,EAA4EC,UAA5E;GAAwF,CAAxF;;EAAA,GADF;;EAAA,oBAAiBZ,mBAGjBD,oBAAqB,GAArB,EAAqB,IAArB,EAAqBc,iBAAfb,cAAe,CAArB,EAAc;EAAA;EAAd","names":["_createElementVNode","$data","$event","onChange","$options","_createElementBlock","_Fragment","_renderList","city","key","id","value","label","_hoisted_1","_toDisplayString"],"sourceRoot":"","sources":["/Users/nathan/Sites/giglist-v2-vue/src/components/CitySelect.vue"],"sourcesContent":["<template>\n  <select v-model=\"selected\" @change=\"setCityId\">\n    <option v-for=\"city in cities\" :key=\"city.id\" :value=\"city.id\">{{ city.label }}</option>\n  </select>\n  <p>{{ selected }}</p>\n</template>\n\n<script>\n\nimport cityData from \"../data/songkickCityData.js\"\n\nexport default {\n  data() {\n    return {\n      cities: cityData,\n      selected: selected\n    }\n  },\n  methods: {\n    setCityId(e) {\n      console.log(e.target.value, this.key)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}